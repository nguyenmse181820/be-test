server:
  servlet:
    context-path: /booking-service
  port: 8082
  address: 0.0.0.0

spring:
  application:
    name: booking-service
  datasource:
    url: jdbc:postgresql://localhost:5432/boeing_bookings
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: guest
    password: guest

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: false
    hostname: ${EUREKA_HOSTNAME:localhost}

vnpay:
  url: "https://sandbox.vnpayment.vn/paymentv2/vpcpay.html"
  tmnCode: "27R12FWP"
  secretKey: "6TP65UT7VDS79YG06C9KWAKR4J2VYVGW"
  returnUrl: ${VNPAY_RETURN_URL:http://localhost:8080/booking-service/api/v1/payment/vn-pay-callback}
  version: "2.1.0"
  command: "pay"
  orderType: "other"

jwt:
  secret:
    key: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

external:
  services:
    flight-service:
      url: ${FLIGHT_SERVICE_URI:http://localhost:8084/flight-service}
      base-path: /api/v1/fs
    loyalty-service:
      name: loyalty-service
      base-path: /api/v1
    notification-service:
      name: notification-service
      base-path: /api/v1/notifications

app:
  rabbitmq:
    exchanges:
      commands: booking.commands.exchange
      events: booking.events.exchange
    queues:
      internalFareChecked: bps.internal.event.farechecked.queue
      internalSeatAvailabilityChecked: bps.internal.event.seatavailabilitychecked.queue
      internalBookingCreatedPendingPayment: bps.internal.event.bookingcreatedpendingpayment.queue
      internalPaymentCompleted: bps.internal.event.paymentcompleted.queue
      internalSeatsConfirmed: bps.internal.event.seatsconfirmed.queue
      internalVoucherUsed: bps.internal.event.voucherused.queue
      internalPointsEarned: bps.internal.event.pointsearned.queue

      internalCreatePendingBookingCmd: bps.command.internal.createpending.queue
      sagaCreateBookingFailed: bps.saga.createbooking.failed.queue
      internalSeatsConfirmation: bps.internal.event.seatsconfirmation.queue
    routingKeys:
      internalFareCheckedEvent: bps.event.internal.farechecked
      internalSeatAvailabilityCheckedEvent: bps.event.internal.seatavailabilitychecked
      internalBookingCreatedEvent: bps.event.internal.bookingcreatedpendingpayment
      internalPaymentCompletedEvent: bps.event.internal.paymentcompleted
      internalSeatsConfirmedEvent: bps.event.internal.seatsconfirmed
      internalVoucherUsedEvent: bps.event.internal.voucherused
      internalPointsEarnedEvent: bps.event.internal.pointsearned
      internalCreatePendingBookingCmdKey: bps.command.internal.createpending
      sagaCreateBookingFailedEvent: saga.createbooking.failed
      seatConfirmationResponse: bps.event.internal.seatconfirmationresponse
